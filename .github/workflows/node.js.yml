# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build and package

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest

    concurrency:
      group: 'build-${{matrix.os}}'
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js for platform ${{ matrix.os }}
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        cache: 'npm'
    - run: npm ci
    - run: npm run make
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: ${{ matrix.os }}
        path: out/make

  release:
    runs-on: ubuntu-latest
    needs: [ 'build' ]
    concurrency:
      group: 'release'
      cancel-in-progress: true

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download the Windows build
      uses: actions/download-artifact@v2
      with:
        name: windows-latest
        path: windows-latest
    - name: Download the Linux build
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-latest
        path: ubuntu-latest
    - name: Compress the builds
      run: |
        cd windows-latest/squirrel.windows/x64/
        7z a -tzip ftcremotedebugger-windows.zip ./
        cd ../../..
    - name: Update the release tag
      run: |
        git tag -d latest-ci-build
        git tag latest-ci-build
        git push origin latest-ci-build --force
    - name: Update the release
      run: |
        gh release upload latest-ci-build windows-latest/squirrel.windows/x64/ftcremotedebugger-windows.zip --clobber
        gh release upload latest-ci-build ubuntu-latest/deb/x64/ftcremotedebugger_1.0.0_amd64.deb --clobber
        gh release upload latest-ci-build ubuntu-latest/rpm/x64/ftcremotedebugger-1.0.0-1.x86_64.rpm --clobber
        gh release edit latest-ci-build --prerelease --notes "This build was made from commit ${{ github.sha }}."
      env:
        GH_TOKEN: ${{ github.token }}
